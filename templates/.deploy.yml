# DÃ©ploie l'image de production
server:production:deploy:
    image: alpine:latest
    stage: deploy
    needs: ['image:latest:register']
    variables:
        ENVIRONMENT: 'production'
        DOCKER_CONTAINER_PREFIX: 'william-donnette-portfolio'
        IMAGE_TAG: 'latest'
    environment:
        name: $ENVIRONMENT
    resource_group: $ENVIRONMENT
    before_script:
        - apk add openssh-client
        - eval $(ssh-agent -s)
    script:
        - ssh -i /root/.ssh/private_key -l debian $SERVER_IP_ADDRESS "echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY &&
          cd $DOCKER_CONFIG_PATH/$DOCKER_CONTAINER_PREFIX &&
          docker-compose stop || true &&
          docker-compose rm -f || true &&
          docker-compose pull || true &&
          docker-compose up -d &&
          docker run --env-file=./.env -e "CONFIG=$(cat ./algolia.config.json | jq -r tostring)" algolia/docsearch-scraper &&
          docker logout $CI_REGISTRY"
    only:
        - main
